        if( !file.exists() ){
            throw new FileNotFoundException("Expected "+file+" was not created");
        }

        // try if the file isn't a pdf
        if ( file.getAbsolutePath().toLowerCase().endsWith("pdf") ) { //$NON-NLS-1$
            return;
        }

        Job addToCatalog = new Job("Add "+file.getName() ){
            @Override
            protected IStatus run(IProgressMonitor monitor) {
                ICatalog localCatalog = CatalogPlugin.getDefault().getLocalCatalog();                
                IServiceFactory serviceFactory = CatalogPlugin.getDefault().getServiceFactory();
                List<IService> services = serviceFactory.createService(new ID(file,null).toURL());
                if (!services.isEmpty()) addToCatalog(localCatalog, services.get(0));
                return !services.isEmpty() ? Status.OK_STATUS : new Status( IStatus.ERROR, ProjectUIPlugin.ID, "Failed to add "+file );
            }
        };
        addToCatalog.schedule();
        
        
        
            private void addToCatalog( ICatalog localCatalog, IService service ) {
        ID id = service.getID();
        IService found = localCatalog.getById(IService.class, id, new NullProgressMonitor());
        if (found != null) {
            // existing catalog entry to replace
            // (if this is only being done for a "refresh" we may be able to take less
            // drastic action)
            localCatalog.replace(service.getID(), service);
        } else {
            localCatalog.add(service);
        }
    }
        